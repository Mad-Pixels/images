version: '3'

vars:
  git_root:
    sh: git rev-parse --show-toplevel

  default_platforms: linux/amd64,linux/arm64
  base_context: images
  registry: "ghcr.io/mad-pixels"
  image_alpine_ver: "3.22.1"

tasks:
  default:
    desc: Show usage
    cmds:
      - echo "Please enter a task or use '-l' or '--list-all' to list all available tasks"
    silent: true

# ================================================#
# ---------------------INTERNAL-------------------#
# ================================================#

  _docker/buildx:
    internal: true
    silent: true
    dir: "{{.git_root}}"
    cmds:
      - |
        docker buildx build \
          --platform {{.platforms | default .default_platforms}} \
          --file {{.dockerfile | default (print .CONTEXT "/Dockerfile")}} \
          {{.BUILD_ARGS}} \
          -t {{.registry}}/{{.CONTEXT}}:{{.TAG}} \
          -t {{.registry}}/{{.CONTEXT}}:latest \
          --push \
          {{.context_path | default (print "./" .CONTEXT)}}

  _docker/run:
    internal: true
    silent: true
    dir: "{{.git_root}}"
    cmd: |
      docker run --rm --init {{if .TTY}}-it{{end}} \
        --cap-drop=ALL \
        --security-opt no-new-privileges \
        --user $(id -u):$(id -g) \
        --workdir /workspace \
        {{if .ENVS}}{{range $env := .ENVS}}--env {{$env}} {{end}}{{end}}\
        {{if .PORTS}}{{range $port := .PORTS}}--publish {{$port}} {{end}}{{end}}\
        {{if .VOLUMES}}{{range $vol := .VOLUMES}}--volume {{$vol}} {{end}}{{end}}\
        --volume "{{.git_root}}/{{.MOUNT_DIR}}:/workspace:rw" \
        {{.IMAGE}} \
        {{.CMD}}
    requires:
      vars: [IMAGE, CMD, MOUNT_DIR]

  _docker/lint:
    internal: true
    silent: true
    dir: "{{.git_root}}"
    cmds:
      - task: _docker/run
        vars:
          IMAGE: "hadolint/hadolint"
          MOUNT_DIR: "{{.DOCKERFILE_PATH | dir}}"
          CMD: "hadolint {{.DOCKERFILE_PATH | base}}"
          VOLUMES:
            - "{{.git_root}}/.hadolint.yaml:/workspace/.hadolint.yaml"

# ================================================#
# ---------------------IMAGES---------------------#
# ================================================#

  actionlint:
    desc: Build actionlint image.
    vars:
      VERSION: $(curl -s "https://api.github.com/repos/rhysd/actionlint/releases/latest" | jq -r .tag_name)
    cmds:
      - task: _docker/buildx
        vars:
          TAG: "{{.VERSION}}"
          CONTEXT: "{{.base_context}}/actionlint"
          BUILD_ARGS: >-
            --build-arg ALPINE_VERSION={{.image_alpine_ver}}
            --build-arg ACTIONLINT_VER={{.VERSION}}
    silent: true

  taskfile:
    desc: Build taskfile image.
    vars:
      VERSION: $(curl -s "https://api.github.com/repos/go-task/task/releases/latest" | jq -r .tag_name)
    cmds:
      - task: _docker/buildx
        vars:
          TAG: "{{.VERSION}}"
          CONTEXT: "{{.base_context}}/taskfile"
          BUILD_ARGS: >-
            --build-arg ALPINE_VERSION={{.image_alpine_ver}}
            --build-arg TASK_VERSION={{.VERSION}}
    silent: true

# ================================================#
# ----------------------CI/CD---------------------#
# ================================================#

  docker/lint:
    desc: Run hadolint for all Dockerfiles in the repo.
    dir: "{{.git_root}}"
    vars:
      files:
        sh: find . -type f -name Dockerfile
    cmds:
      - for: { var: files }
        task: _docker/lint
        vars:
          DOCKERFILE_PATH: "{{.ITEM}}"

